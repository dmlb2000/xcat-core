#
# Run xCAT post install
#
export MASTER_IP="#XCATVAR:XCATMASTER#"
export MASTER_IPS="#XCATVAR:XCATMASTER#"
export MASTER="#XCATVAR:XCATMASTER#"
export INSTALLDIR=#TABLE:site:key=installdir:value#
if [ -z "$INSTALLDIR" ]; then
    INSTALLDIR="/install"
fi
cd /tmp
RAND=$(perl -e 'print int(rand(50)). "\n"')
sleep $RAND
for i in $(seq 1 20)
do
	GOTIT=0
	for i in $MASTER_IPS
	do
      #wget -l inf -N -r --waitretry=10 --random-wait --retry-connrefused  -t 0 -T 60 ftp://$i/postscripts
      wget -l inf -N -r --waitretry=10 --random-wait --retry-connrefused  -nH --cut-dirs=2 --reject "index.html*" --no-parent -t 0 -T 60 http://$i$INSTALLDIR/postscripts/ -P /xcatpost
		if [ "$?" = "0" ]
		then
         if [ ! -x /usr/bin/openssl ]; then #Stop if no openssl to help the next bit
            exit 1
         fi
       	 USEOPENSSLFORXCAT=1 #Though this is the only method going forward, flag to allow backward compatibility with 2.2 generated netboot images
     	 export USEOPENSSLFORXCAT
         XCATSERVER=$i:3001
         export XCATSERVER
         mv $i/postscripts /xcatpost
         rm -rf $i
         chmod +x /xcatpost/*
         /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /xcatpost/mypostscript
         MYCONT=`grep MASTER /xcatpost/mypostscript`
         MAX_RETRIES=10
         RETRY=0
         while [ -z "$MYCONT" ]; do
            RETRY=$(($RETRY+1))
            if [ $RETRY -eq $MAX_RETRIES ]
            then
                break
            fi

            let SLI=$RANDOM%10+10
            sleep $SLI
            /xcatpost/getpostscript.awk |sed -e 's/<[^>]*>//g'|egrep -v '^ *$'|sed -e 's/^ *//' > /xcatpost/mypostscript
            MYCONT=`grep MASTER /xcatpost/mypostscript`
         done

            
         chmod +x /xcatpost/mypostscript
			GOTIT=1
			break
		fi
	done
	if [ "$GOTIT" = "1" ]
	then
            #save the master to /opt/xcat/xcatinfo file
            if [ ! -f /opt/xcat/xcatinfo ]; then
                mkdir -p /opt/xcat
                touch /opt/xcat/xcatinfo
            fi
            echo "XCATSERVER=$i" > /opt/xcat/xcatinfo
	    break
	fi
	RAND=$(perl -e 'print int(rand(5)). "\n"')
	sleep $RAND
done
echo "INSTALLDIR=$INSTALLDIR" >> /opt/xcat/xcatinfo
cd /xcatpost
#gunzip xcatpost.tar.gz
#tar -xvf xcatpost.tar
#/xcatpost/#TABLE:nodelist:THISNODE:node#
export PATH=/xcatpost:$PATH

# use the run_ps subroutine to run the postscripts
TMP=`sed "/postscripts-start-here/,/postscripts-end-here/ s/\(.*\)/run_ps \1/;s/run_ps\s*#/#/;s/run_ps\s*$//" /xcatpost/mypostscript`
echo "
# subroutine used to run postscripts
run_ps () {
 logdir=\"/var/log/xcat\"
 mkdir -p \$logdir
 logfile=\"/var/log/xcat/xcat.log\"
 
 if [ -f \$1 ]; then 
  echo "\"\`date\` Running postscript: \$@\"" | tee -a \$logfile
  #./\$@ 2>&1 1> /tmp/tmp4xcatlog
  #cat /tmp/tmp4xcatlog | tee -a \$logfile
  ./\$@ 2>&1 | tee -a $logfile
 else
  echo "\"\`date\` Postscript \$1 does NOT exist.\"" | tee -a \$logfile
 fi
}
# subroutine end

" > /xcatpost/mypostscript
echo "$TMP" >> /xcatpost/mypostscript
TMP=`sed "/postbootscripts-start-here/,/postbootscripts-end-here/ s/\(.*\)/run_ps \1/;s/run_ps\s*#/#/;s/run_ps\s*$//" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript 


#save the postboot scripts to /xcatpost/mypostscript.post
TMP=`sed "/postscripts-start-here/,/postscripts-end-here/ d" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript.post
chmod 755 /xcatpost/mypostscript.post

#create the post init 
cat >/etc/init.d/xcatpostinit1 << 'EOF'
#INCLUDE:#TABLE:site:key=installdir:value#/postscripts/xcatpostinit1#
EOF
chmod 755 /etc/init.d/xcatpostinit1
ln -s /etc/init.d/xcatpostinit1 /etc/rc3.d/S84xcatpostinit1
ln -s /etc/init.d/xcatpostinit1 /etc/rc4.d/S84xcatpostinit1
ln -s /etc/init.d/xcatpostinit1 /etc/rc5.d/S84xcatpostinit1
mkdir -p /opt/xcat
cat >/opt/xcat/xcatinstallpost << 'EOF'
#INCLUDE:#TABLE:site:key=installdir:value#/postscripts/xcatinstallpost#
chkconfig xcatpostinit1 off
EOF
chmod 755 /opt/xcat/xcatinstallpost

chkconfig --add xcatpostinit1

#only run the prebooot scripts here
TMP=`sed "/postbootscripts-start-here/,/postbootscripts-end-here/ d" /xcatpost/mypostscript`
echo "$TMP" > /xcatpost/mypostscript

/xcatpost/mypostscript
export NODE=#TABLE:nodelist:THISNODE:node#
export OSVER=#TABLE:nodetype:THISNODE:os#
export ARCH=#TABLE:nodetype:THISNODE:arch#
addsiteyum
sed -i 's/^serial/#serial/' /boot/grub/grub.conf
sed -i 's/^terminal/#terminal/' /boot/grub/grub.conf
updateflag.awk $MASTER 3002
cd /
#rm -Rf /xcatpost
#rm -f /xcatpost/mypostscript
