.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CHDEF.1 1"
.TH CHDEF.1 1 "2008-02-05" "perl v5.8.2" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBchdef\fR \- Change xCAT data object definitions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIchdef [\-h | \-\-help ] [\-t object\-types]\fR
.PP
\&\fIchdef [\-V | \-\-verbose] [\-t object\-types] [\-o object\-names]\fR 
\&\fI[\-z | \-\-stanza ] [\-x | \-\-xml ] [\-w  attr=val,[attr=val...]]\fR
\&\fI[noderange] [attr=val [attr=val...]] \fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used to change xCAT object definitions which are stored in the xCAT database.  The default is to replace any existing attribute value with the one specified on the command line. The command will also create a new definition if one doesn't exist.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBattr=val [attr=val ...]\fR  Specifies one or more \*(L"attribute equals value\*(R" pairs, separated by spaces. Attr=val pairs must be specified last on the command line. Use the help option to get a list of valid attributes for each object type. 
.PP
\&\fB\-h |\-\-help\fR            Display usage message.
.PP
\&\fB\-m |\-\-minus\fR           If the value of the attribute is a list then this option may be used to remove one or more items from the list.
.PP
\&\fBnoderange\fR             A set of comma delimited node names and/or group names. (must be the first parameter) See the \*(L"noderange\*(R" man page for details on supported formats.
.PP
\&\fB\-o object-names\fR       A set of comma delimited object names.
.PP
\&\fB\-p |\-\-plus\fR            This option will add the specified values to the existing value of the attribute.  It will create a comma-separated list of values.
.PP
\&\fB\-t object-types\fR       A set of comma delimited object types.  Use the help option to get a list of valid object types.
.PP
\&\fB\-V |\-\-verbose\fR         Verbose mode.
.PP
\&\fB\-w attr=val,[attr=val...]\fR       A comma-separated list of attributes and values that can be used to select objects. Use the help option to get a list of validattributes for each object type.
.PP
\&\fB\-x | \-\-xml\fR            Indicates that the file being piped to the command is in \s-1XML\s0 format.
.PP
\&\fB\-z | \-\-stanza\fR         Indicates that the file being piped to the command is in stanza format.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
1. To change a site definition.
.PP
\&\fIchdef \-t site \-o clustersite rsh=/bin/rsh rcp=/bin/rcp installdir=/xcatinstall\fR
.PP
2. To change a basic node definition.
.PP
\&\fIchdef \-t node \-o node01 groups=\*(L"all,aix\*(R"\fR
.PP
(The group definitions are also created if they don't already exist.) 
.PP
3. To add another group to the \*(L"groups\*(R" attribute in the previous example.
.PP
\&\fIchdef \-p \-t node \-o node01 groups=\*(L"compute\*(R"\fR
.PP
4. To remove the \*(L"all\*(R" group from the \*(L"groups\*(R" attribute in the previous example.
.PP
\&\fIchdef \-m \-t node \-o node01 groups=\*(L"all\*(R"\fR
.PP
5. To replace the current \*(L"groups\*(R" attribute value of \*(L"node01\*(R".
.PP
\&\fIchdef \-t node \-o node01 groups=\*(L"linux\*(R"\fR
.PP
6. To add \*(L"node01\*(R" to the \*(L"memberslist\*(R" attribute of a group definition called \*(L"LinuxNodes\*(R".
.PP
\&\fIchdef \-p \-t group \-o LinuxNodes memberlist=\*(L"node01\*(R"\fR
.SH "FILES"
.IX Header "FILES"
/usr/sbin/chdef
.SH "NOTES"
.IX Header "NOTES"
This command is part of the xCAT software product.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See the mkdef, lsdef and rmdef commands.
