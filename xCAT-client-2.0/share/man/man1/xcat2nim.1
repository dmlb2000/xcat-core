.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "XCAT2NIM.1 1"
.TH XCAT2NIM.1 1 "2007-12-16" "perl v5.8.2" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBxcat2nim\fR \- Use this command to create and manage AIX NIM definitions based on xCAT object definitions.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIxcat2nim [\-h | \-\-help ]\fR
.PP
\&\fIxcat2nim [\-V | \-\-verbose] [\-a | \-\-all] [\-l | \-\-list] [\-u | \-\-update] [\-r | \-\-remove] [\-t object\-types] [\-o object\-names] [noderange] [attr=val [attr=val...]] \fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The xcat2nim command uses xCAT node and group object definitions to create, update, list, or remove corresponding \s-1NIM\s0 machine and group definitions.
.PP
The xCAT definitions must be created and the \s-1NIM\s0 master must be installed and configured before running this command. 
.PP
xcat2nim uses xCAT database information, command line input, and default values to run the appropriate \s-1NIM\s0 commands.
.PP
The default behavior is to create new \s-1NIM\s0 definitions but not apply updates to existing definitions.  If you use wish to update existing \s-1NIM\s0 definitions then you must use the update option.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-a |\-\-all\fR             Create \s-1NIM\s0 definitions corresponding to all xCAT node and group definitions.
.PP
\&\fBattr=val [attr=val ...]\fR  Specifies one or more \*(L"attribute equals value\*(R" pairs, separated by spaces. Attr=val pairs must be specified last on the command line.  The attribute names must correspond to the attributes supported by the relevant \s-1NIM\s0 commands.  When providing attr=val pairs on the command line you must not specify more than one object type.
.PP
\&\fB\-h |\-\-help\fR            Display the usage message.
.PP
\&\fB\-l | \-\-list\fR		 List \s-1NIM\s0 definitions corresponding to xCAT definitions.
.PP
\&\fBnoderange\fR             A set of comma delimited node names and/or group names, (must be the first parameter). See the \*(L"noderange\*(R" man page for details on supported formats.
.PP
\&\fB\-o object-names\fR       A set of comma delimited xCAT object names. 
.PP
\&\fB\-t object-types\fR       A set of comma delimited xCAT object types. Supported types include: node and group.
.PP
\&\fB\-r | \-\-remove\fR         Remove \s-1NIM\s0 definitions corresponding to xCAT definitions.
.PP
\&\fB\-u | \-\-update\fR         Update existing \s-1NIM\s0 definitions based on xCAT definitions. 
.PP
\&\fB\-V |\-\-verbose\fR         Verbose mode.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
0 The command completed successfully.
.PP
1 An error has occurred.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
1.  Convert all xCAT node and group definitions to \s-1NIM\s0 machine and group definitions.
.PP
\&\fIxcat2nim \-a\fR
.PP
2. To create \s-1NIM\s0 machine definitions for all xCAT node definitions.
.PP
\&\fIxcat2nim \-t node\fR 
.PP
3. To create a \s-1NIM\s0 machine definition corresponding to the xCAT clstrn01 node definition.
.PP
\&\fIxcat2nim \-t node \-o clstrn01\fR
.PP
4. To create a \s-1NIM\s0 machine group definition corresponding to the xCAT aix61nodes group definition.
.PP
\&\fIxcat2nim \-t group \-o aix61nodes\fR
.PP
5.  Convert all node definitions in the xCAT group AIXNodes to \s-1NIM\s0 machine definitions.
.PP
\&\fIxcat2nim \-t node \-o AIXNodes\fR
.PP
4.  To create \s-1NIM\s0 machine definitions for each node that is a member of the xCAT \*(L"lpar_grp\*(R" group and specify attribute values that will be applied to each definition.
.PP
\&\fIxcat2nim \-t node \-o lpar_grp machinetype=standalone netboot_kernel=mp cable_type=\*(L"N/A\*(R"\fR
.PP
5. To update the \s-1NIM\s0 definition of node clstrn01 to have a \*(L"cable_type\*(R" of \*(L"bnc\*(R".
.PP
\&\fIxcat2nim \-t node \-o clstrn01 cable_type=bnc\fR
.PP
6. To list the \s-1NIM\s0 definition for node clstrn02.
.PP
\&\fIxcat2nim \-t node \-l \-o clstrn02\fR
.PP
7. To remove the \s-1NIM\s0 definition for the group \*(L"AIXnodes\*(R".
.PP
\&\fIxcat2nim \-t group \-r \-o AIXnodes\fR
.SH "FILES"
.IX Header "FILES"
/usr/sbin/xcat2nim
.SH "NOTES"
.IX Header "NOTES"
This command is part of the xCAT software product.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See the xCAT mkdef command for details on how to create the xCAT node and group object definitions. 
