#!/bin/sh 
#
#
# Sample script to customize options for PE
# For AIX:
#    TBD
# For Linux:
#    - Create a smaller PNSD log file in /tmp 
#    - Configure poe.limits file

OS=`uname`
INSTALL_DIR='/install'
PE_DIR=$pedir

if [ -z "$PE_DIR" ]; then
   # try to default
   PE_DIR=$INSTALL_DIR/post/otherpkgs/$OSVER/$ARCH/pe
fi


if [ $NODESETSTATE != "genimage" ]; then
   # running as a postscript in a full-disk install or AIX diskless install
   installroot=""
fi

# Configure the PNSD.cfg to use a smaller log so it doesn't use so much memory
# for a stateless image.  Normally, pnsd creates this file if it does not 
# exist, but it will not fill it in if it does exist.
if [ ! -f $installroot/etc/PNSD.cfg ]; then
    echo "log_file = /tmp/serverlog" > $installroot/etc/PNSD.cfg
    echo "log_file_size = 2097152" >> $installroot/etc/PNSD.cfg
    echo "socket_file = /tmp/PNSD" >> $installroot/etc/PNSD.cfg
else
  if [ "$OS" == "AIX" ]; then
    /usr/bin/sed -e 's/log_file_size = .*/log_file_size = 2097152/g'  $installroot/etc/PNSD.cfg > $installroot/etc/PNSD.cfg.new
    mv  $installroot/etc/PNSD.cfg.new  $installroot/etc/PNSD.cfg
  else
    /bin/sed -i 's/log_file_size = .*/log_file_size = 2097152/g'  $installroot/etc/PNSD.cfg
  fi
  if [ $NODESETSTATE == "install" ] || [ $NODESETSTATE == "boot" ]; then
    stopsrc -s pnsd
    startsrc -s pnsd
  fi
fi

# Configure the poe.limits file
if [ ! -f $installroot/etc/poe.limits ]; then
    echo "MP_POE_LAUNCH=all" > $installroot/etc/poe.limits
else
  if [ "$OS" == "AIX" ]; then
    /usr/bin/sed -e 's/MP_POE_LAUNCH=.*/MP_POE_LAUNCH=all/g'  $installroot/etc/poe.limits > $installroot/etc/poe.limits.new
   mv $installroot/etc/poe.limits.new $installroot/etc/poe.limits
  else
    /bin/sed -i 's/MP_POE_LAUNCH=.*/MP_POE_LAUNCH=all/g'  $installroot/etc/poe.limits
  fi
fi


# POE requires rsh to be running
if [ "$OS" == "AIX" ]; then
  /usr/bin/sed -e '/\/rshd/s/^#//g' $installroot/etc/inetd.conf > $installroot/etc/inetd.conf.new
  mv /etc/inetd.conf.new /etc/inetd.conf
  refresh -s inetd
else
  /bin/sed -i 's/disable.*/disable = no/g'  $installroot/etc/xinetd.d/rsh
  if [ $NODESETSTATE == "install" ] || [ $NODESETSTATE == "boot" ]; then
     service xinetd restart
  fi
fi


# The Parallel Debugger on AIX requires a /proc filesystem
if [ "$OS" == "AIX" ]; then
  if ! grep "/proc:" /etc/filesystems > /dev/null 2>&1 ; then
     echo "/proc:                     " >> /etc/filesystems
     echo "        dev       = /proc  " >> /etc/filesystems
     echo "        vol       = /proc  " >> /etc/filesystems
     echo "        mount     = true   " >> /etc/filesystems
     echo "        check     = false  " >> /etc/filesystems
     echo "        free      = false  " >> /etc/filesystems
     echo "        vfs       = procfs " >> /etc/filesystems
  fi
  mount /proc
fi
